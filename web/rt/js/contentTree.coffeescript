$ ->
  usdlc.contentTree = $('#contentTree').jstree
    html_data :
      ajax :
        url : (li) ->
          path = usdlc.urlBase
          if li is -1
            path = "#{path}/contentTreeBase_html.groovy"
          else
            from = $('a', li).get(0).pathname
            path = "#{path}/contentTree_html.groovy?from=#{from}"
          cr = jQuery.url.setUrl(path).attr("directory")
          cr = "#{cr}/" if cr.charAt(cr.length - 1) != '/'
          this.contentRoot = cr
          path
        success : (data) ->
          tree = ' '
          root = this.contentRoot
          $('<ins/>').html(data).find('a.usdlc[action=page]').each ->
            a = $(this)
            href = usdlc.removeDomain(a.attr('href'))
            if href.substring(0, 2) != '..' and href[0] != '/'
              href = root + href if href.charAt(0) != '/'
              id = usdlc.camelCase(href.replace(/\/index\.html/g, '').replace(/\//g, ' '))
              rel = a.attr('rel') ? ''
              rel = "rel='#{rel}'" if rel
              tree += "<li id='#{id}' class='jstree-closed' #{rel}><a href='#{href}' class='contentLink' action='page'>#{a.text()}</a></li>"
          return tree
    hotkeys :
      del : -> # Don't delete a node from here (yet)
      f2 : -> # Stop the F2 rename function
    cookies :
      cookie_options :
        expires : 1000
    themes :
      theme : 'classic'  # apple classic default
      url : '/lib/jquery/js/themes/classic/style.css'
    ui:
      select_limit: 1
    types :
      user :
        max_children : 0
        select_node : false
        open_node: false
    plugins : [ 'html_data', 'ui', 'cookies', 'themes', 'hotkeys', 'types' ]
  usdlc.contentTree.removeClass('hidden')
  usdlc.contentTree.refresh = ->
    usdlc.contentTree.jstree 'refresh', 'a.jstree-clicked'
  usdlc.contentTree.setFocus = (to) ->
    steps = to.replace(/\/index\.html$/, '').split('/')
    last = steps.length - 1
    id = '#'
    open_node = (index) ->
      if steps[index] == '~'
        id += usdlc.camelCase " #{steps[index + 1]}"
        open_node(index + 2)
      else
        id += usdlc.camelCase " #{steps[index]}" # leading space = upper first
        if index < last
          callback = -> open_node(index + 1)
          usdlc.contentTree.jstree 'open_node', id, callback, true
        else
          usdlc.contentTree.jstree 'select_node', id, true
    open_node(1)
