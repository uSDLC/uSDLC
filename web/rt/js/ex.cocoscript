$ ->
	usdlc.Ex = class
		(@editor) ~>
		command: (@cmdrlLine) ->
		dot:~ -> @editor.lineInfo!.line
		dot:~ (to) -> @editor.setCursor to 1
		end:~ -> @editor.lineCount!
		offset: ->
			offset = 0
			if match = @cmdline.match /^([+\-]?\d*)/
				offset = +match[0]
		address: ->
			addr = 0
			first = @cmdline[0]
			rest = @cmdline.substring 1
			switch first
			case '.'
				@cmdline = rest
				addr = @dot + @offset!
			case '$'
				@cmdline = rest
				addr = @end + @offset!
			case '%'
				addr = 1
				@cmdline = ",$#rest"
			case '-' then addr = @dot + @offset!
			case '+' then addr = @dot + @offset!
			case "'"
				@cmdline = rest.substring 1
				addr = @registers[rest[0]]
			case '/'
				[re, @cmdline] = rest.match /(.*?[^\\]\/)(.*)/
				re = new Regexp re
				for i from dot + 1 to end
					if re.test @editor.getLine(i)
						addr = i
						break
			case '?'
				[re, @cmdline] = rest.match /(.*?[^\\]\?)(.*)/
				re = new Regexp re
				for i from dot - 1 til 0 by -1
					if re.test @editor.getLine(i)
						addr = i
						break
			default
				addr = @offset! or dot