select section 'CSV Implementation'
prompt 'CSV Support Class',
    'Does not need a constructor since Groovy will automagically fill instance data.'
edit code 'CSV Implementation', '''
$i
    def store
.'''

prompt 'One method binds them all.'
edit code 'CSV Implementation', '''
$i
    CSV load() {
        def process
        store.withReader {
            CSVReader reader = new CSVReader(it)
            def header = reader.readNext().collect { it.trim() }
            process = { row -> 
              [header, row].transpose().collectEntries{it}
            }
            def row
            while (row = reader.readNext()) {
                perRow(process(row.collect {it.trim()}))
            }
        }
        this
    }

    def list = [], perRow = { list << it }
	
    /** Retrieval will return each row as a map */
    def getAt(int row) {
        list[row]
    }
    /** Number of rows is the size of the list retrieved */
    def size() {
        list.size()
    }
    def each(Closure action) { list.each(action) }
}
"Make me a script so I can load for testing"
.'''

prompt 'If we do not specify an action for each line, collect them for return.'