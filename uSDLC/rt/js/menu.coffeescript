$ ->
  usdlc.resetMenu = -> #temporary until main one loaded

  usdlc.loadMainMenu = (div, content) ->
    doc = $(document)
    submenu = (depth, menu) ->
      menu.children = []
      menu.children.depth = depth
      menu.dom = $('<span>')
      menu.keys = {}
      menu.div = div
      return menu
    menuData = menu = submenu 0, depth : 0
    menuBases = {}
    contextMenu = ""
    usdlc.resetMenu = -> usdlc.showMainMenu contextMenu
    usdlc.setMenuContext = (to) ->
      contextMenu = menuBases[to]
      usdlc.resetMenu()

    usdlc.showMainMenu = (menu) ->
      usdlc.currentMainMenu = menu
      menu.div.children('span').detach()
      menu.div.append menu.dom
      hasSections = -> usdlc.inFocus?.parents('#pageContents').size()
      folded = -> usdlc.inFocus?.hasClass('folded')
      if hasSections() and not folded()
        div.detach()
        usdlc.inFocus.prepend(div)

    usdlc.menuToTop = ->
      div.detach()
      $('#topMenu').append(div)

    processRow = (row) ->
      return if not row
      item = new Object()
      item.parent = menu

      [text,key,action,shortcut] = row.split /,\s*/
      item.key = key ? '\0'
      [all,spaces,item.text] = text.match(/(\s*)(.*)/)
      item.depth = spaces.length
      menuBases[item.text] = item

      if action
        try
          item.action = new Function(
            "#{action};usdlc.resetMenu()")
        catch error
          throw "error in menu action :: #{action} :: #{error}"
      else
        item.action = (item) -> usdlc.showMainMenu item

      menu = menu.parent while item.depth < menu.children.depth
      if item.depth > menu.children.depth
        parent = menu.children[menu.children.length - 1]
        menu = submenu item.depth, parent

      text = text.replace(key, "<u>#{key}</u>")
      a = $('<a>').attr('href', 'javascript:').append(text)
      a.addClass 'hidden' if text[0] is '_'
      a.click (event) ->
        event.preventDefault()
        item.action(item)
        return false
      menu.dom.append a

      if shortcut
        if shortcut[0..2] is '##' # popup only
          shortcut = shortcut[2..shortcut.length]
        else
          shortcut = 'ctrl+' + shortcut.substring(1) if shortcut[0] is '^'
          doc.bind 'keydown', shortcut, (event) ->
            if !usdlc.menuKeysOff(event)
              event.target.usdlcKeyEvent = true
              item.action(item)
              event.preventDefault()
        a.attr('title', shortcut)

      menu.children.push menu.keys[item.key.toUpperCase()] = item

    processRow row for row in content.split(/\r?\n/)
    usdlc.setMenuContext "Section_Menu"

  usdlc.menuKeystroke = (key) ->
    item = usdlc.currentMainMenu?.keys[key.toUpperCase()]
    if item
      item.action(item)
      return true
    return false

  usdlc.menuKeysOff = (event) ->
    return usdlc.inEditMode(event) or usdlc.inTreeMode() or usdlc.inDialogs()

  $(document).keydown (event) ->
    return true if usdlc.menuKeysOff(event)
    return true if usdlc.inDialogs()
    return true if event.metaKey or event.altKey or event.ctrlKey
    if event.which is 27
      usdlc.resetMenu()
    else if not usdlc.menuKeystroke(String.fromCharCode(event.which))
      return true
    event.preventDefault()
    return false
