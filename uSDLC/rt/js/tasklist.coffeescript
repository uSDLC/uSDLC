$ ->
  cut = false

  usdlc.activateTasklist = (div) ->
    delayed = -> usdlc._activateTasklist div
    setTimeout delayed, 500
  usdlc._activateTasklist = (div) ->
    detailsPane = div.parent().next();
    section = usdlc.getSection(div)
    sectionId = section.attr('id')
    uuid = "#{$('#pageTitle').attr('uuid')}-#{sectionId}"

    div.jstree
      cookies :
        save_opened: "#{uuid}-opened"
        save_selected: "#{uuid}-selected"
        cookie_options : expires : 1000
      themes :
        theme : 'classic'  # apple classic default
        url : '/usdlc/lib/jquery/js/themes/classic/style.css'
        icons : false
      core:
        animation: 500
        html_titles: true
      checkbox:
        two_state: true
      hotkeys:
        'tab': -> usdlc.clearFocus(); return false
        'x': -> usdlc.unsetTreeFocus(div); return false
        'i': -> div.insertNode(); return false
        'r': -> div.renameNode(); return false
        'shift+up': -> mover 'prev', 'before'; return false
        'shift+down': -> mover 'next', 'after'; return false
        'shift+left': -> mover 'parents', 'after'; return false
        'shift+right': -> mover 'prev', 'last'; return false
        'ctrl+c meta+c': -> div.jstree 'copy', selectedNode; return false
        'ctrl+x meta+x': -> div.jstree 'cut', selectedNode; return false
        'ctrl+v meta+v': -> div.jstree 'paste', selectedNode; return false
      plugins : [ 'ui', 'html_data', 'themes', 'hotkeys', 'checkbox', 'types',
        'types', 'crrm', 'dnd', 'contextmenu', 'cookies', 'search' ]

    nextId = 2
    addId = (li) ->
      nextId += 1 while ($(id = "##{sectionId}t#{nextId}", div).size() > 0)
      id = id.substring(1)
      li.attr('id', id)
      return id

    div.bind
      'click.jstree': (event) ->
        usdlc.setTasklistFocus(usdlc.inTasklist())
      'create.jstree': (event, data) -> addId(data.rslt.obj)
      'cut.jstree': (event, data) -> cut = true
      'copy.jstree': (event, data) -> cut = false
      'paste.jstree': (event, data) ->
        if cut then data.rslt.nodes.each (index, node) -> addId(node)
        return false
      'select_node.jstree': (event, data) ->
        selectedNode = data.rslt.obj
        div.jstree 'open_node', selectedNode
        showTask detailsPane, "#{selectedNode.attr('id')}d"
        return false

    mover = (refDir, position) ->
      selectedNode = $('.jstree-clicked', div).parents('li').first()
      reference = (selectedNode[refDir])('li').first()
      if reference.size()
        div.jstree "move_node", selectedNode, reference, position
    div.moveup = div.movedown = div.movein = div.moveout = mover
    div.copyNode = -> div.jstree 'copy', selectedNode
    div.cutNode = -> div.jstree 'cut', selectedNode
    div.pasteNode = -> div.jstree 'paste', selectedNode
    div.insertNode = -> div.jstree 'create', null, "last"
    div.renameNode = -> div.jstree 'rename', null
    setTimeout hideCompleted, 500

  showTask = (detailsPane, id) ->
    detailsPane.children().hide()
    detailDiv = $("##{id}", detailsPane).first()
    detailDiv = detailsPane.children('div').first() if not detailDiv.size()
    detailDiv.show()

  getActiveTaskId = (elem) ->
    return $('.jstree-clicked', elem.closest('tr')).closest('li').attr('id')

  usdlc.buildTaskDetail = (formElement) ->
    formElement = $ formElement
    parts = $('input:checked', formElement).toArray()
    return if not parts
    id = "#{getActiveTaskId(formElement)}d"
    detailDiv = $("<div/>").attr('id', id).addClass('taskDetail')
    detailsPane = formElement.closest('td')
    detailsPane.append detailDiv
    showTask detailsPane, id
    loadPart = (input) ->
      name = $(input).attr('value')
      usdlc.loadSection name, 'Tasks', (h1) ->
        detailDiv.append h1.nextAll().remove('h2')
        if parts.length > 0
          loadPart parts.shift()
        else
          usdlc.activateHtml detailDiv
    loadPart parts.shift()

  usdlc.inTasklist = ->
    return null if not usdlc.inFocus
    treeContainer = $('.jstree', usdlc.inFocus).first()
    return treeContainer if treeContainer.size() > 0
    return null
  usdlc.inTreeMode = (event) ->
    if usdlc.inFocus
      return usdlc.inTasklist()
    else
      return usdlc.contentTreeContainer

  usdlc.setTasklistFocus = (section) ->
    container = usdlc.setTreeFocus((section))
    if container
      container.focus()
      usdlc.setContext 'Tasklist'
      container.addClass('inFocus')

  usdlc.setTreeFocus = (container) ->
    return false if not container
    if not container.hasClass('jstree')
      container = $('.jstree', container).first()
    return null if container.size() is 0
    container.jstree('set_focus')
    container.jstree('enable_hotkeys')
    return container

  usdlc.unsetTreeFocus = (container) ->
    return false if not container
    if not container.hasClass('jstree')
      container = $('.jstree', container).first()
    return false if container.size() is 0
    container.jstree('unset_focus')
    container.jstree('disable_hotkeys')
    container.removeClass('rounded pale-gray-box inFocus')
    usdlc.setContext 'Section'
    return true

  usdlc.destroyTasklists = ->
    lists = $('div.tasklist')
    $("li.jstree-checked", lists).attr('checked', 'true')
    lists.jstree('destroy')
    $('li[checked]', lists).removeAttr('checked').addClass('jstree-checked')
    lists.find('ins').remove()
    $("[class]", lists).each (index, element) ->
      element = $(element)
      element.attr('class', $.trim(element.attr('class')))

  usdlc.treeCopy = () -> usdlc.inTreeMode()?.copyNode()
  usdlc.treeCut = () -> usdlc.inTreeMode()?.cutNode()
  usdlc.treePaste = () -> usdlc.inTreeMode()?.pasteNode()
  usdlc.treeInsert = () -> usdlc.inTreeMode()?.insertNode()
  usdlc.treeRename = () -> usdlc.inTreeMode()?.renameNode()
  usdlc.treeMoveDown = () -> usdlc.inTreeMode()?.movedown 'next', 'after'
  usdlc.treeMoveLeft = () -> usdlc.inTreeMode()?.moveout 'parents', 'after'
  usdlc.treeMoveRight = () -> usdlc.inTreeMode()?.movein 'prev', 'last'
  usdlc.treeMoveUp = () -> usdlc.inTreeMode()?.moveup 'prev', 'before'

  usdlc.loadTaskUsers = (input) ->
    usdlc.listUsersAndGroupsAutocomplete(input)
    usdlc.addTasklistHistoryOnBlur input, "Assign to"

  usdlc.loadTaskPriority = ($select) ->
    select = $select.get(0)
    $select.change ->
      index = select.selectedIndex
      value = $select.val()
      $('option', $select).removeAttr('selected')
      selectedOption = select.options[index]
      $(selectedOption).attr('selected', 'selected')
      $select.val(value)
      usdlc.tasklistHistory $select, "Priority: #{selectedOption.text}"

  saveCheckbox = (input) ->
    checked = input.attr 'checked'
    if checked
      input.attr 'checked', 'checked'
      return true
    else
      input.removeAttr 'checked'
      return false

  usdlc.taskCheckbox = (input) ->
    input.change ->
      saveCheckbox input
      usdlc.tasklistHistory input, "#{input.attr('value')}: #{input.attr('checked') ? 'no'}"

  usdlc.taskAutocomplete = (input) ->
    usdlc.loadLocalAutocomplete(input)
    usdlc.addTasklistHistoryOnBlur input, input.attr('name')

  usdlc.taskDatePicker = (input) ->
    usdlc.datePicker input,
      onClose: (dateText) ->
        input.attr 'value', dateText
        usdlc.tasklistHistory input, "#{input.attr('name')} date: #{dateText}"

  usdlc.addTaskClip = (elem) ->
    a = usdlc.clipboard.pasteLink(elem,'div.taskDetail','fieldset.taskPageLinks')
    usdlc.tasklistHistory(elem, "Reference: #{a.html()}")

  usdlc.addTaskNote = (button) ->
    parent = $(button).closest('div.taskDetail')
    textarea = $('textarea.newTaskNote', parent)
    usdlc.tasklistHistory(button, "Note: #{textarea.val()}")
    textarea.val('')

  usdlc.addTasklistHistoryOnBlur = (element, label) ->
    element.change ->
      element.attr 'value', element.val()
      usdlc.tasklistHistory element, "#{label}: #{element.val()}"

  usdlc.tasklistHistory = (element, entry) ->
    parent = $(element).closest('div.taskDetail')
    history = $('fieldset.taskHistory', parent)
    div = $('<div/>').addClass('taskHistoryItem')
    date = $.datepicker.formatDate('D, dd-M-yy', new Date())
    div.html("<span class='taskHistoryDate'>#{date}</span> #{entry}")
    history.append(div)

  hideCompleted = -> $("li.jstree-checked", usdlc.inTasklist).addClass('hidden')
  showCompleted = -> $("li.jstree-checked", usdlc.inTasklist).removeClass('hidden')

  usdlc.completedCheckbox = (input) ->
    input.change ->
#      saveCheckbox input
      if input.attr 'checked'
        showCompleted()
      else
        hideCompleted()

  $('div.taskDetail').live 'focus', (ev) -> usdlc.unsetTreeFocus(usdlc.inTasklist())
  $('div.taskDetail').live 'blur', (ev) -> usdlc.setTasklistFocus(usdlc.inTasklist())

# todo: button to make current detail the default
# todo: make tree from clipboard entry
# todo: button to refresh tree and sections connection
# todo: add gantt chart
